console.log("V1.1");    
     function replaceQuestionMarks() {
            const contextReplacements = [
                { search: '???? Orientações Iniciais', replace: '📋 Orientações Iniciais' },
                { search: '???? Script de Admissão - Sala', replace: '📝 Script de Admissão - Sala' },
                { search: '???? Script de Admissão - CI', replace: '📝 Script de Admissão - CI' },
                { search: '???? Links de Acesso Rápido', replace: '🔗 Links de Acesso Rápido' },
                { search: '???? Postar no Formulário DA', replace: '📋 Postar no Formulário DA' },
                { search: '???? Conferir Postagem', replace: '📊 Conferir Postagem' },
                { search: '???? Enviar Carta de Boas-Vindas', replace: '💌 Enviar Carta de Boas-Vindas' },
                
                { search: /\?\?\?\?(?=\s*Orientações)/g, replace: '📋' },
                { search: /\?\?\?\?(?=\s*Script)/g, replace: '📝' },
                { search: /\?\?\?\?(?=\s*Links)/g, replace: '🔗' },
                { search: /\?\?\?\?(?=\s*Postar)/g, replace: '📋' },
                { search: /\?\?\?\?(?=\s*Conferir)/g, replace: '📊' },
                { search: /\?\?\?\?(?=\s*Enviar)/g, replace: '💌' },
            ];
            
            let replacedSomething = false;
            
            if (document.body) {
                let html = document.body.innerHTML;
                let originalHtml = html;
                
                contextReplacements.forEach(replacement => {
                    if (typeof replacement.search === 'string') {
                        if (html.includes(replacement.search)) {
                            html = html.replace(new RegExp(replacement.search.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), replacement.replace);
                            replacedSomething = true;
                        }
                    } else {
                        if (replacement.search.test(html)) {
                            html = html.replace(replacement.search, replacement.replace);
                            replacedSomething = true;
                        }
                    }
                });
                
                if (replacedSomething) {
                    document.body.innerHTML = html;
                }
            }
            
            const styleTags = document.querySelectorAll('style');
            styleTags.forEach(styleTag => {
                let cssContent = styleTag.innerHTML;
                let originalCss = cssContent;
                
                contextReplacements.forEach(replacement => {
                    if (typeof replacement.search === 'string') {
                        if (cssContent.includes(replacement.search)) {
                            cssContent = cssContent.replace(new RegExp(replacement.search.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), replacement.replace);
                            replacedSomething = true;
                        }
                    } else {
                        if (replacement.search.test(cssContent)) {
                            cssContent = cssContent.replace(replacement.search, replacement.replace);
                            replacedSomething = true;
                        }
                    }
                });
                
                if (cssContent !== originalCss) {
                    styleTag.innerHTML = cssContent;
                }
            });
            
            return replacedSomething;
        }

        function waitForDOMAndExecute() {
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', executeReplacements);
            } else {
                executeReplacements();
            }
        }

        function executeReplacements() {
            replaceQuestionMarks();
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 100);
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 500);
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 1000);
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 2000);
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 3000);
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 5000);
        }

        waitForDOMAndExecute();

        window.addEventListener('load', () => {
            setTimeout(() => {
                replaceQuestionMarks();
            }, 100);
            setTimeout(() => {
                replaceQuestionMarks();
            }, 1000);
        });

        function selectOption(option) {
            document.getElementById('sala-btn').classList.remove('active');
            document.getElementById('ci-btn').classList.remove('active');
            
            document.getElementById('script-sala').style.display = 'none';
            document.getElementById('script-ci').style.display = 'none';
            
            if (option === 'sala') {
                document.getElementById('sala-btn').classList.add('active');
                document.getElementById('script-sala').style.display = 'block';
            } else if (option === 'ci') {
                document.getElementById('ci-btn').classList.add('active');
                document.getElementById('script-ci').style.display = 'block';
            }
            
            setTimeout(() => {
                replaceQuestionMarks();
            }, 10);
        }

        function copyText(button, text) {
            const tempTextArea = document.createElement('textarea');
            tempTextArea.value = text;
            document.body.appendChild(tempTextArea);
            tempTextArea.select();
            document.execCommand('copy');
            document.body.removeChild(tempTextArea);
            
            button.classList.add('copied');
            button.textContent = '✅ Copiado!';
            
            const toast = document.getElementById('toast');
            toast.classList.add('show');
            
            setTimeout(() => {
                button.classList.remove('copied');
                button.textContent = 'Copiar';
            }, 2000);
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        if (navigator.clipboard && navigator.clipboard.writeText) {
            function copyText(button, text) {
                navigator.clipboard.writeText(text).then(() => {
                    button.classList.add('copied');
                    button.textContent = '✅ Copiado!';
                    
                    const toast = document.getElementById('toast');
                    toast.classList.add('show');
                    
                    setTimeout(() => {
                        button.classList.remove('copied');
                        button.textContent = 'Copiar';
                    }, 2000);
                    
                    setTimeout(() => {
                        toast.classList.remove('show');
                    }, 3000);
                }).catch(err => {
                    console.error('Erro ao copiar texto: ', err);
                });
            }
        }
